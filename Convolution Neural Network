

A Convolution is a subset vector(/tensor of m1Xn1) which can be used as a multipler over the input vector (of size mXn) to identify a pattern in the input image vector.

The resultant (we get a tensor) of the production of Convolution (array) and input (array) is called a channel.

The convolution can be used to detect a pattern -> a vertical line or a horizaontal line or a pattern in array form to identif strokes in the input image.

This convolution is also called filter. 

Applying many such convolutions will yield n-Convolution outputs or n-Filters -> consititues a Convolution layer and each filter result termed as "channel" in Convolution layer.

Idea behind the mutli channels (=tensor) in Convolution layer is to identif different aspects/artifacts of the input image.

A first filter may be the convolution over input image = result1, say
While rest filters can be convolution over the result1 and so on

How to define a convolution to detect a horizontal line in image?
Lets say we consider a horizontal that occupies 3pixels,then
H_Convolution = [[1, 1, 1],
               [-1, -1, -1]]
On same lines, Vertical line convolution of size3:
V_Convolution = [[1 -1 ],
                  [1 -1],
                  [1 -1]]
 
![alt text]   (   https://github.com/Passionme/My-Daily-Class/blob/master/Learning%20Materials/CNN.PNG)
    
Once you define the convolutions, apply convolution to img to vet a filtered image.

Before designing a CNN model, it is good to udnerstand existing models that are trained over millions of input data, which is not practical for common man.

Instead of using the available pretrained models (Tensorflow/Scikit/... provide the models for free), we can customize the models for chop unnecessary filters/ filter layers/ convolution layers and defined our own output layer. This is called "Transfer Learning"
                  
